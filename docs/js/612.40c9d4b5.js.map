{"version":3,"file":"js/612.40c9d4b5.js","mappings":"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","sources":["webpack://vue-web3/../src/controllers/RouterCtrl.ts","webpack://vue-web3/../src/utils/CoreUtil.ts","webpack://vue-web3/../src/controllers/EventsCtrl.ts","webpack://vue-web3/../src/controllers/OptionsCtrl.ts","webpack://vue-web3/../src/controllers/ConfigCtrl.ts","webpack://vue-web3/../src/utils/ExplorerUtil.ts","webpack://vue-web3/../src/controllers/ExplorerCtrl.ts","webpack://vue-web3/../src/controllers/ModalCtrl.ts","webpack://vue-web3/../src/controllers/ThemeCtrl.ts","webpack://vue-web3/../src/controllers/ToastCtrl.ts","webpack://vue-web3/../src/utils/PolyfillUtil.ts","webpack://vue-web3/../src/client.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(params).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n  if (!window.global) {\n    window.global = window\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["n","p","history","view","data","N","state","subscribe","e","h","push","t","reset","replace","length","goBack","pop","slice","setData","i","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","isHttpUrl","startsWith","isArray","Array","formatNativeUrl","s","this","formatUniversalUrl","o","replaceAll","endsWith","setWalletConnectDeepLink","a","encodeURIComponent","async","Promise","setTimeout","openHref","open","localStorage","setItem","JSON","stringify","href","name","console","info","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","Wallet","Error","T","location","hostname","protocol","r","enabled","userSessionId","events","connectedWalletId","$","S","initialize","crypto","randomUUID","setConnectedWalletId","click","type","timestamp","Date","now","track","l","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","c","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsAuth","y","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","C","setConfig","Object","assign","L","W","URL","searchParams","append","entries","forEach","String","fetch","json","m","getWalletImageUrl","getAssetImageUrl","P","defineProperty","O","getOwnPropertySymbols","_","prototype","hasOwnProperty","R","propertyIsEnumerable","U","x","enumerable","configurable","writable","value","B","f","call","M","d","wallets","listings","total","page","search","recomendedWallets","G","recommendedIds","join","getAllListings","values","sort","u","v","w","indexOf","id","sdks","version","excludedIds","getMobileListings","getDesktopListings","map","k","filter","E","A","resetSearch","I","Q","uri","setInterval","clearInterval","close","H","D","V","K","j","z","J","b","themeMode","X","setThemeConfig","themeVariables","g","message","variant","Y","openToast","closeToast","Buffer","global","process","env","constructor","openModal","closeModal","subscribeModal","setTheme","initUi","document","createElement","body","insertAdjacentElement"],"sourceRoot":""}